{
	"name": "windows-ai-studio",
	"displayName": "AI Toolkit for Visual Studio Code",
	"description": "AI Toolkit for VS Code streamlines generative AI app development by integrating tools and models. Browse and download public and custom models; author, test and evaluate prompts; fine-tune; and use them in your applications.",
	"version": "0.16.1",
	"publisher": "ms-windows-ai-studio",
	"icon": "media/Market_AIToolkit_128.png",
	"author": {
		"name": "Microsoft"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/Microsoft/windows-ai-studio.git"
	},
	"bugs": {
		"url": "https://github.com/Microsoft/windows-ai-studio/issues"
	},
	"license": "SEE LICENSE IN LICENSE.txt",
	"engines": {
		"vscode": "^1.98.0"
	},
	"extensionKind": [
		"workspace"
	],
	"categories": [
		"AI",
		"Azure",
		"Chat",
		"Data Science",
		"Machine Learning",
		"Other"
	],
	"extensionPack": [
		"TeamsDevApp.vscode-ai-foundry"
	],
	"preview": true,
	"keywords": [
		"AI",
		"Azure",
		"Chat",
		"Data Science",
		"Machine Learning",
		"studio",
		"windows",
		"models",
		"LLM"
	],
	"activationEvents": [
		"onUri",
		"workspaceContains:infra/finetuning.config.json",
		"workspaceContains:infra/inference.config.json",
		"workspaceContains:prompt.aitk.txt",
		"workspaceContains:.aitk/*",
		"workspaceContains:model_lab.workspace.config"
	],
	"aiKey": "0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255",
	"main": "./dist/extension.js",
	"l10n": "./l10n",
	"contributes": {
		"configuration": {
			"title": "AI Toolkit",
			"properties": {
				"windowsaistudio.enableRemoteFine-tuningAndInference": {
					"type": "boolean",
					"default": false,
					"description": "Enable to run fine-tuning and inference on Azure Container Apps (Reload Visual Studio Code after changing this setting to take effect)."
				},
				"windowsaistudio.templateRef": {
					"type": [
						"string",
						"null"
					],
					"default": null,
					"description": "Branch to pull from the template repo"
				},
				"windowsaistudio.openAIInferencePort": {
					"type": "integer",
					"default": null,
					"description": "The Open AI inference http local port"
				},
				"windowsaistudio.workspaceAgentPipe": {
					"type": "string",
					"default": null,
					"description": "Workspace Agent Pipe name"
				},
				"windowsaistudio.playgroundAgentPipe": {
					"type": "string",
					"default": null,
					"description": "Playground Agent Pipe name"
				},
				"windowsaistudio.playgroundAgentModelStorage": {
					"type": "string",
					"default": null,
					"description": "Playground Agent model storage path"
				},
				"windowsaistudio.remoteInfereneEndpoints": {
					"type": "array",
					"description": "List of remote inference endpoints",
					"items": {
						"type": "object",
						"order": 1,
						"description": "Remote inference endpoint",
						"oneOf": [
							{
								"type": "object",
								"properties": {
									"type": {
										"const": "Custom"
									},
									"name": {
										"type": "string",
										"description": "Name of the inference endpoint",
										"examples": [
											"gpt-4o-mini"
										]
									},
									"displayName": {
										"type": "string",
										"description": "Display Name used in the UI",
										"examples": [
											"my-remote-gpt-4o-mini"
										]
									},
									"chatCompletionUrl": {
										"type": "string",
										"description": "The endpoint URL",
										"examples": [
											"https://YOUR_RESOURCE_NAME.openai.azure.com/openai/deployments/YOUR_DEPLOYMENT_ID/chat/completions?api-version=2024-06-01"
										]
									},
									"headers": {
										"type": "object",
										"patternProperties": {
											"^.*$": {
												"type": "string"
											}
										},
										"description": "Headers for API key authentication",
										"additionalProperties": false,
										"examples": [
											{
												"api-key": "******"
											}
										]
									}
								},
								"additionalProperties": false,
								"default": {
									"type": "Custom",
									"name": "<Some name>",
									"chatCompletionUrl": "https://YOUR_RESOURCE_NAME.openai.azure.com/openai/deployments/YOUR_DEPLOYMENT_ID/chat/completions?api-version=2024-06-01",
									"headers": {
										"api-key": "******"
									}
								}
							},
							{
								"type": "object",
								"properties": {
									"type": {
										"const": "GitHub"
									},
									"id": {
										"type": "string",
										"description": "Model ID for GitHub model",
										"examples": [
											"azureml://registries/azure-openai/models/gpt-4o/versions/2"
										]
									}
								},
								"additionalProperties": false,
								"default": {
									"type": "GitHub",
									"name": "gpt-4o-mini"
								}
							}
						]
					}
				},
				"windowsaistudio.externalOpenAIProviders": {
					"type": "array",
					"description": "List of external providers to register",
					"items": {
						"type": "object",
						"order": 1,
						"description": "External OpenAI provider",
						"properties": {
							"TypeName": {
								"type": "string",
								"description": "Type Name of the external provider"
							},
							"ModelName": {
								"type": "string",
								"description": "Name of the AI model to expose"
							},
							"BaseUri": {
								"type": "string",
								"description": "The Base URI where the external provider receive http requests"
							}
						},
						"additionalProperties": false,
						"default": {
							"TypeName": "Python",
							"ModelName": "<Some model>",
							"BaseUri": "http://localhost:8000"
						}
					},
					"uniqueItems": true
				},
				"windowsaistudio.modelLabAcceptedDatasets": {
					"type": "array",
					"description": "User accepted datasets in Model Lab",
					"items": {
						"type": "string"
					},
					"default": [],
					"uniqueItems": true
				},
				"windowsaistudio.modelLabGlobalCachePath": {
					"type": "string",
					"description": "If set, use this global shared cache instead of per project in Model Lab",
					"default": null
				}
			}
		},
		"viewsContainers": {
			"activitybar": [
				{
					"id": "ai-toolkit-explorer",
					"title": "AI Toolkit",
					"icon": "media/AIToolkit.svg"
				}
			]
		},
		"views": {
			"ai-toolkit-explorer": [
				{
					"id": "aiToolkitMyModels",
					"name": "My Models",
					"icon": "media/AIToolkit.svg",
					"contextualTitle": "My Models"
				},
				{
					"id": "aiToolkitModels",
					"name": "Models",
					"icon": "media/AIToolkit.svg",
					"contextualTitle": "Models"
				},
				{
					"id": "aiToolkitTools",
					"name": "Tools",
					"icon": "media/AIToolkit.svg",
					"contextualTitle": "Tools"
				},
				{
					"id": "aiToolkitHelpAndFeedback",
					"name": "Help and Feedback",
					"icon": "media/AIToolkit.svg",
					"contextualTitle": "Help and Feedback"
				}
			]
		},
		"menus": {
			"view/item/context": [
				{
					"command": "ai-mlstudio.treeView.models.loadInPlayground",
					"when": "view == aiToolkitMyModels && viewItem =~ /<loadInPlayground>/",
					"group": "1-model-action@1"
				},
				{
					"command": "ai-mlstudio.treeView.models.createFineTuneProject",
					"when": "view == aiToolkitMyModels && viewItem =~ /<createFineTuneProject>/",
					"group": "1-model-action@2"
				},
				{
					"command": "ai-mlstudio.treeView.models.copyModelName",
					"when": "view == aiToolkitMyModels && viewItem =~ /<copyModelName>/",
					"group": "2-model-management@1"
				},
				{
					"command": "ai-mlstudio.treeView.models.edit",
					"when": "view == aiToolkitMyModels && viewItem =~ /<edit>/",
					"group": "2-model-management@2"
				},
				{
					"command": "ai-mlstudio.treeView.models.refresh",
					"when": "view == aiToolkitMyModels && viewItem =~ /<refresh>/",
					"group": "2-model-management@3"
				},
				{
					"command": "ai-mlstudio.treeView.models.delete",
					"when": "view == aiToolkitMyModels && viewItem =~ /<delete>/",
					"group": "2-model-management@4"
				},
				{
					"command": "ai-mlstudio.treeView.models.cancelDownloading",
					"when": "view == aiToolkitMyModels && viewItem =~ /<cancelDownloading>/",
					"group": "2-model-management@5"
				},
				{
					"command": "ai-mlstudio.treeView.models.about",
					"when": "view == aiToolkitMyModels && viewItem =~ /<about>/",
					"group": "3-model-about@1"
				},
				{
					"command": "ai-mlstudio.treeView.models.startServer",
					"when": "view == aiToolkitMyModels && viewItem == ONNX",
					"group": "1-endpoint-management@1"
				},
				{
					"command": "ai-mlstudio.treeView.models.stopServer",
					"when": "view == aiToolkitMyModels && viewItem == ONNX",
					"group": "1-endpoint-management@2"
				},
				{
					"command": "ai-mlstudio.treeView.models.copyEndpoint",
					"when": "view == aiToolkitMyModels && viewItem == ONNX",
					"group": "1-endpoint-management@3"
				},
				{
					"command": "ai-mlstudio.treeView.models.foundry.selectProject",
					"when": "view == aiToolkitMyModels && viewItem == 'Azure AI Foundry'",
					"group": "1-foundry-management@1"
				},
				{
					"command": "ai-mlstudio.treeView.models.foundry.selectProject",
					"when": "view == aiToolkitMyModels && viewItem == 'Azure AI Foundry'",
					"group": "inline"
				}
			],
			"view/title": [
				{
					"command": "ai-mlstudio.treeView.models.addRemoteInferenceEndpoint",
					"when": "view == aiToolkitMyModels",
					"group": "navigation"
				},
				{
					"command": "ai-mlstudio.treeView.models.remoteInferenceInPlaygroundDocs",
					"when": "view == aiToolkitMyModels",
					"group": "navigation"
				}
			],
			"explorer/context": [
				{
					"command": "ai-mlstudio.openDataset",
					"when": "false",
					"group": "navigation"
				}
			],
			"commandPalette": [
				{
					"command": "ai-mlstudio.treeView.models.refresh",
					"when": "false"
				},
				{
					"command": "ai-mlstudio.treeView.models.loadInPlayground",
					"when": "false"
				},
				{
					"command": "ai-mlstudio.treeView.models.createFineTuneProject",
					"when": "false"
				},
				{
					"command": "ai-mlstudio.treeView.models.addRemoteInferenceEndpoint",
					"when": "false"
				},
				{
					"command": "ai-mlstudio.treeView.models.foundry.selectProject",
					"when": "false"
				},
				{
					"command": "ai-mlstudio.treeView.models.edit",
					"when": "false"
				},
				{
					"command": "ai-mlstudio.treeView.models.delete",
					"when": "false"
				},
				{
					"command": "ai-mlstudio.treeView.models.cancelDownloading",
					"when": "false"
				},
				{
					"command": "ai-mlstudio.treeView.models.about",
					"when": "false"
				},
				{
					"command": "ai-mlstudio.treeView.models.click",
					"when": "false"
				},
				{
					"command": "ai-mlstudio.treeView.models.startServer",
					"when": "false"
				},
				{
					"command": "ai-mlstudio.treeView.models.stopServer",
					"when": "false"
				},
				{
					"command": "ai-mlstudio.treeView.models.copyEndpoint",
					"when": "false"
				},
				{
					"command": "ai-mlstudio.setupAIModel",
					"when": "false"
				},
				{
					"command": "ai-mlstudio.deleteInferenceModel",
					"when": "false"
				},
				{
					"command": "ai-mlstudio.executeAgentPayload",
					"when": "false"
				},
				{
					"command": "ai-mlstudio.loadSotaModelList",
					"when": "false"
				},
				{
					"command": "ai-mlstudio.copyGHAccessToken",
					"when": "false"
				},
				{
					"command": "_ai-mlstudio.comingSoon",
					"when": "false"
				},
				{
					"command": "ai-mlstudio.addRemoteInferenceEndpoint",
					"when": "false"
				},
				{
					"command": "ai-mlstudio.treeView.models.remoteInferenceInPlaygroundDocs",
					"when": "false"
				},
				{
					"command": "ai-mlstudio.promptBuilder",
					"when": "false"
				},
				{
					"command": "ai-mlstudio.agentBuilder",
					"when": "false"
				},
				{
					"command": "ai-mlstudio.openDataset",
					"when": "false"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "aiToolkitMyModels",
				"contents": "No models yet\nStart by adding one from the Models Catalog.\n[Open Model Catalog](command:ai-mlstudio.models)\nPaste a URL in the command palette to add models for [remote inference](command:ai-mlstudio.addRemoteInferenceEndpoint)."
			}
		],
		"commands": [
			{
				"command": "ai-mlstudio.treeView.models.refresh",
				"title": "%command.ai-mlstudio.models.refresh.title%"
			},
			{
				"command": "ai-mlstudio.treeView.models.loadInPlayground",
				"title": "%command.ai-mlstudio.models.loadInPlayground.title%",
				"enablement": "!ai-mlstudio.modelLoading"
			},
			{
				"command": "ai-mlstudio.treeView.models.copyModelName",
				"title": "%command.ai-mlstudio.models.copyModelName.title%"
			},
			{
				"command": "ai-mlstudio.treeView.models.createFineTuneProject",
				"title": "%command.ai-mlstudio.models.createFineTuneProject.title%"
			},
			{
				"command": "ai-mlstudio.treeView.models.addRemoteInferenceEndpoint",
				"title": "%command.ai-mlstudio.treeView.models.addRemoteInferenceEndpoint.title%",
				"icon": "$(add)"
			},
			{
				"command": "ai-mlstudio.treeView.models.remoteInferenceInPlaygroundDocs",
				"title": "%command.ai-mlstudio.treeView.models.remoteInferenceInPlaygroundDocs.title%",
				"icon": "$(info)"
			},
			{
				"command": "ai-mlstudio.treeView.models.edit",
				"title": "%command.ai-mlstudio.treeView.models.edit.title%",
				"enablement": "!ai-mlstudio.modelLoading"
			},
			{
				"command": "ai-mlstudio.treeView.models.delete",
				"title": "%command.ai-mlstudio.treeView.models.delete.title%",
				"enablement": "!ai-mlstudio.modelLoading"
			},
			{
				"command": "ai-mlstudio.treeView.models.cancelDownloading",
				"title": "%command.ai-mlstudio.treeView.models.cancelDownloading.title%",
				"enablement": "!ai-mlstudio.modelLoading"
			},
			{
				"command": "ai-mlstudio.treeView.models.about",
				"title": "%command.ai-mlstudio.treeView.models.about.title%"
			},
			{
				"command": "ai-mlstudio.treeView.models.click",
				"title": "%command.ai-mlstudio.treeView.models.click.title%"
			},
			{
				"command": "ai-mlstudio.treeView.models.startServer",
				"title": "%command.ai-mlstudio.treeView.models.startServer.title%"
			},
			{
				"command": "ai-mlstudio.treeView.models.stopServer",
				"title": "%command.ai-mlstudio.treeView.models.stopServer.title%"
			},
			{
				"command": "ai-mlstudio.treeView.models.copyEndpoint",
				"title": "%command.ai-mlstudio.treeView.models.copyEndpoint.title%"
			},
			{
				"command": "ai-mlstudio.treeView.models.foundry.selectProject",
				"title": "%command.ai-mlstudio.treeView.models.foundry.selectProject.title%",
				"icon": "$(list-filter)"
			},
			{
				"command": "ai-mlstudio.commandPalette.addRemoteInferenceEndpoint",
				"title": "%command.ai-mlstudio.commandPalette.addRemoteInferenceEndpoint.title%"
			},
			{
				"command": "ai-mlstudio.addRemoteInferenceEndpoint",
				"title": "%command.ai-mlstudio.commandPalette.addRemoteInferenceEndpoint.title%"
			},
			{
				"command": "ai-mlstudio.setupAIModel",
				"title": "Setup",
				"icon": {
					"light": "resources/light/edit.svg",
					"dark": "resources/dark/edit.svg"
				}
			},
			{
				"command": "ai-mlstudio.setHFAccessToken",
				"title": "%command.ai-mlstudio.setHFAccessToken.title%"
			},
			{
				"command": "ai-mlstudio.setGHAccessToken",
				"title": "%command.ai-mlstudio.setGHAccessToken.title%"
			},
			{
				"command": "ai-mlstudio.copyGHAccessToken",
				"title": "%command.ai-mlstudio.copyGHAccessToken.title%"
			},
			{
				"command": "ai-mlstudio.resetAllTokens",
				"title": "%command.ai-mlstudio.resetAllTokens.title%"
			},
			{
				"command": "ai-mlstudio.showWhatsNew",
				"title": "%command.ai-mlstudio.showWhatsNew.title%"
			},
			{
				"command": "ai-mlstudio.prepareEnvironment",
				"title": "%command.ai-mlstudio.prepareEnvironment.title%"
			},
			{
				"command": "ai-mlstudio.loadSotaModelList",
				"title": "%command.ai-mlstudio.loadSotaModelList.title%"
			},
			{
				"command": "_ai-mlstudio.comingSoon",
				"title": "%command.ai-mlstudio.comingSoon.title%"
			},
			{
				"command": "ai-mlstudio.executeAgentPayload",
				"title": "%command.ai-mlstudio.executeAgentPayload.title%"
			},
			{
				"command": "_ai-mlstudio.validateRequirements",
				"title": "%command.ai-mlstudio.validateRequirements.title%"
			},
			{
				"command": "ai-mlstudio.provision",
				"title": "%command.ai-mlstudio.provision.title%",
				"enablement": "ai-mlstudio.enableRemote"
			},
			{
				"command": "ai-mlstudio.run",
				"title": "%command.ai-mlstudio.run.title%",
				"enablement": "ai-mlstudio.enableRemote"
			},
			{
				"command": "ai-mlstudio.provisionInference",
				"title": "%command.ai-mlstudio.provisionInference.title%",
				"enablement": "ai-mlstudio.enableRemote"
			},
			{
				"command": "ai-mlstudio.deployInference",
				"title": "%command.ai-mlstudio.deployInference.title%",
				"enablement": "ai-mlstudio.enableRemote"
			},
			{
				"command": "ai-mlstudio.downloadInferenceModel",
				"title": "%command.ai-mlstudio.downloadInferenceModel.title%"
			},
			{
				"command": "ai-mlstudio.deleteInferenceModel",
				"title": "%command.ai-mlstudio.deleteInferenceModel.title%"
			},
			{
				"command": "ai-mlstudio.unloadInferenceModel",
				"title": "%command.ai-mlstudio.unloadInferenceModel.title%"
			},
			{
				"command": "ai-mlstudio.shutdownInferenceAgent",
				"title": "%command.ai-mlstudio.shutdownInferenceAgent.title%"
			},
			{
				"command": "ai-mlstudio.installCudaWslLinux",
				"title": "%command.ai-mlstudio.installCudaWslLinux.title%"
			},
			{
				"command": "ai-mlstudio.installCondaWslLinux",
				"title": "%command.ai-mlstudio.installCondaWslLinux.title%"
			},
			{
				"command": "ai-mlstudio.showOutputChannel",
				"title": "%command.ai-mlstudio.showOutputChannel.title%"
			},
			{
				"command": "ai-mlstudio.streamingLog",
				"title": "%command.ai-mlstudio.streamingLog.title%",
				"enablement": "ai-mlstudio.enableRemote"
			},
			{
				"command": "ai-mlstudio.editSecret",
				"title": "%command.ai-mlstudio.editSecret.title%",
				"enablement": "ai-mlstudio.enableRemote"
			},
			{
				"command": "ai-mlstudio.models",
				"title": "%command.ai-mlstudio.models.title%",
				"icon": "$(library)"
			},
			{
				"command": "ai-mlstudio.tutorials",
				"title": "%command.ai-mlstudio.tutorials.title%",
				"icon": "$(folder-library)"
			},
			{
				"command": "ai-mlstudio.promptBuilder",
				"title": "AI Toolkit: Open Agent Builder"
			},
			{
				"command": "ai-mlstudio.agentBuilder",
				"title": "AI Toolkit: Open Agent Builder"
			},
			{
				"command": "ai-mlstudio.openDataset",
				"title": "%command.ai-mlstudio.openDataset.title%",
				"enablement": "false"
			},
			{
				"command": "ai-mlstudio.encryptCustomModelValue",
				"title": "AI Toolkit: Encrypt a value for custom model",
				"enablement": "false"
			},
			{
				"command": "ai-mlstudio.test.happyPath",
				"title": "AI Toolkit: A Test Command",
				"enablement": "false"
			},
			{
				"command": "ai-mlstudio.mcp.add",
				"title": "%command.ai-mlstudio.mcp.add.title%"
			},
			{
				"command": "ai-mlstudio.mcp.list",
				"title": "%command.ai-mlstudio.mcp.list.title%"
			},
			{
				"command": "ai-mlstudio.mcp.reset",
				"title": "%command.ai-mlstudio.mcp.reset.title%"
			},
			{
				"command": "ai-mlstudio.mcp.select",
				"title": "%command.ai-mlstudio.mcp.select.title%"
			}
		],
		"walkthroughs": [
			{
				"id": "aiToolkitGetStarted",
				"title": "%command.ai-mlstudio.walkthrough.title%",
				"description": "%command.ai-mlstudio.walkthrough.description%",
				"steps": [
					{
						"id": "aiToolkitDownloadModel",
						"title": "%command.ai-mlstudio.walkthrough.downloadModel.title%",
						"description": "%command.ai-mlstudio.walkthrough.downloadModel.description%",
						"media": {
							"svg": "resources/walkthrough/model-catalog.svg",
							"altText": "%command.ai-mlstudio.walkthrough.downloadModel.title%"
						}
					},
					{
						"id": "aiToolkitTryPlayground",
						"title": "%command.ai-mlstudio.walkthrough.tryPlayground.title%",
						"description": "%command.ai-mlstudio.walkthrough.tryPlayground.description%",
						"media": {
							"svg": "resources/walkthrough/try-playground.svg",
							"altText": "%command.ai-mlstudio.walkthrough.tryPlayground.title%"
						}
					},
					{
						"id": "aiToolkitExplore",
						"title": "%command.ai-mlstudio.walkthrough.Explore.title%",
						"description": "%command.ai-mlstudio.walkthrough.Explore.description%",
						"media": {
							"svg": "resources/walkthrough/explore.svg",
							"altText": "%command.ai-mlstudio.walkthrough.Explore.title%"
						}
					}
				]
			}
		]
	},
	"scripts": {
		"build-workspace-agent-win-x64": "dotnet publish ../../src/WorkspaceAutomation.Agent/WorkspaceAutomation.Agent.csproj -c Release --runtime win-x64 /p:Platform=x64 /p:DebugSymbols=false /p:DebugType=None",
		"build-inference-agent-win-x64": "dotnet publish ../../src/Inference.Service/Inference.Service.Agent/Inference.Service.Agent.csproj -c Release --runtime win-x64 /p:Platform=x64 /p:DebugSymbols=false /p:DebugType=None",
		"build-workspace-agent-win-arm64": "dotnet publish ../../src/WorkspaceAutomation.Agent/WorkspaceAutomation.Agent.csproj -c Release --runtime win-arm64 /p:Platform=arm64 /p:DebugSymbols=false /p:DebugType=None",
		"build-inference-agent-win-arm64": "dotnet publish ../../src/Inference.Service/Inference.Service.Agent/Inference.Service.Agent.csproj -c Release --runtime win-arm64 /p:Platform=arm64 /p:DebugSymbols=false /p:DebugType=None",
		"build-workspace-agent-linux-x64": "dotnet publish ../../src/WorkspaceAutomation.Agent/WorkspaceAutomation.Agent.csproj -c Release --runtime linux-x64 /p:Platform=x64 /p:DebugSymbols=false /p:DebugType=None",
		"build-inference-agent-linux-x64": "dotnet publish ../../src/Inference.Service/Inference.Service.Agent/Inference.Service.Agent.csproj -c Release --runtime linux-x64 /p:Platform=x64 /p:DebugSymbols=false /p:DebugType=None",
		"build-inference-agent-osx-arm64": "dotnet publish ../../src/Inference.Service/Inference.Service.Agent/Inference.Service.Agent.csproj -c Release --runtime osx-arm64 /p:Platform=arm64 /maxcpucount:1 /p:DebugSymbols=false /p:DebugType=None",
		"build-workspace-agent-osx-arm64": "dotnet publish ../../src/WorkspaceAutomation.Agent/WorkspaceAutomation.Agent.csproj -c Release --runtime osx-arm64 /p:Platform=arm64 /maxcpucount:1 /p:DebugSymbols=false /p:DebugType=None",
		"build-inference-agent-universal": "echo no-op",
		"build-workspace-agent-universal": "echo no-op",
		"package-linux-x64": "npm run set-version && vsce package --target linux-x64 && npm run reset-version",
		"package-darwin-arm64": "npm run set-version && vsce package --target darwin-arm64 && npm run reset-version",
		"package-win32-x64": "npm run set-version && vsce package --target win32-x64 && npm run reset-version",
		"package-win32-arm64": "npm run set-version && vsce package --target win32-arm64 && npm run reset-version",
		"package-universal": "npm run set-version && vsce package && npm run reset-version",
		"package-pre-release-linux-x64": "npm run set-version && vsce package --pre-release --target linux-x64 && npm run reset-version",
		"package-pre-release-darwin-arm64": "npm run set-version && vsce package --pre-release --target darwin-arm64 && npm run reset-version",
		"package-pre-release-win32-x64": "npm run set-version && vsce package --pre-release --target win32-x64 && npm run reset-version",
		"package-pre-release-win32-arm64": "npm run set-version && vsce package --pre-release --target win32-arm64 && npm run reset-version",
		"package-pre-release-universal": "npm run set-version && vsce package --pre-release && npm run reset-version",
		"vsce-manifest": "vsce generate-manifest",
		"vscode:prepublish": "webpack --mode production",
		"test-compile": "tsc -p ./",
		"build:test": "tsc --project tsconfig.test.json --incremental",
		"test:unit": "npm run download-template && npm run build:test && mocha",
		"lint": "eslint \"src/**/*.ts\"",
		"watch": "webpack --mode development --watch",
		"prepare-bin": "npm run make-bin-scripts-dir && npm run copy-workspace-agent && npm run copy-inference-agent && npm run copy-workspace-agent-scripts",
		"make-bin-scripts-dir": "mkdirp ./bin/scripts",
		"copy-workspace-agent": "copyfiles --flat ../../artifacts/publish/WorkspaceAutomation.Agent/release*/** -e ../../artifacts/publish/WorkspaceAutomation.Agent/release*/*.pdb -e ../../artifacts/publish/WorkspaceAutomation.Agent/release*/*.lib -e ../../artifacts/publish/WorkspaceAutomation.Agent/release*/*.xml -e ../../artifacts/publish/WorkspaceAutomation.Agent/release*/payload*.json -e ../../artifacts/publish/WorkspaceAutomation.Agent/release*/Scripts/** ./bin",
		"copy-workspace-agent-scripts": "copyfiles --flat ../../artifacts/publish/WorkspaceAutomation.Agent/release*/Scripts/** ./bin/Scripts",
		"copy-inference-agent": "copyfiles --flat ../../artifacts/publish/Inference.Service.Agent/release*/** -e ../../artifacts/publish/Inference.Service.Agent/release*/*.pdb -e ../../artifacts/publish/Inference.Service.Agent/release*/*.lib -e ../../artifacts/publish/Inference.Service.Agent/release*/*.xml -e ../../artifacts/publish/Inference.Service.Agent/release*/onnx*.exe ./bin",
		"compile-development": "webpack --mode development",
		"bootstrap-developer-win-arm64": "npm run install:all && npm run build:webview && npm run build:model-lab && npm run build-workspace-agent-win-arm64 && npm run build-inference-agent-win-arm64 && npm run prepare-bin && npm run compile-development && npm run download-template",
		"bootstrap-developer-win-x64": "npm run install:all && npm run build:webview && npm run build:model-lab && npm run build-workspace-agent-win-x64 && npm run build-inference-agent-win-x64 && npm run prepare-bin && npm run compile-development && npm run download-template",
		"bootstrap-developer-linux-x64": "npm run install:all && npm run build:webview && npm run build:model-lab && npm run build-workspace-agent-linux-x64 && npm run build-inference-agent-linux-x64 && npm run prepare-bin && npm run compile-development && npm run download-template",
		"install:all": "npm install && cd webview-ui && npm install && cd ../model-lab-ui && npm install",
		"start:webview": "cd webview-ui && npm run start",
		"build:webview": "cd webview-ui && npm run build",
		"build:model-lab": "npm run prettier:model-lab && npm run sync:model-lab && cd model-lab-ui && npm run build",
		"setup:model-lab-uitest": "npm run build:model-lab && extest setup-tests -e ./model-lab-ui/dist-uitests-ext",
		"test:model-lab-ui": "extest run-tests ./model-lab-ui/dist-uitests/%npm_config_test%.test.js -m ./model-lab-ui/.mocharc-debug.js -e ./model-lab-ui/dist-uitests-ext",
		"sync:model-lab": "copyfiles -u 3 -V model-lab-ui/src/rpc/**/* src/model-lab/rpc && copyfiles -u 2 -V model-lab-ui/src/rpc/interface/model.ts model-lab-ui/uitests",
		"prettier:model-lab": "prettier --write model-lab-ui/src/**/*.ts model-lab-ui/src/**/*.tsx model-lab-ui/uitests/**/*.ts src/model-lab/**/*.ts tests/model-lab/**/*.ts",
		"pretest": "npm run compile-development && npm run lint && npm run download-template",
		"set-version": "nbgv-setversion",
		"reset-version": "nbgv-setversion --reset",
		"export-l10n": "vscode-l10n-dev export --outDir ./l10n ./src",
		"lockfile": "^1.0.4",
		"download-template": "ts-node ./src/utilities/templateUtils.ts -- https://api.github.com/repos/microsoft/windows-ai-studio-templates/releases/latest ./resources",
		"zip-template": "python ./resources/modelLab/utilities.py --task zipTemplate --input ../../../windows-ai-studio-templates --output ./resources/template.zip",
		"setup": "npm run install:all && npm run compile-development && npm run build:webview"
	},
	"devDependencies": {
		"@types/adm-zip": "^0.5.5",
		"@types/chai": "^4.3.17",
		"@types/chai-as-promised": "^7.1.3",
		"@types/fs-extra": "^11.0.4",
		"@types/glob": "^8.1.0",
		"@types/lockfile": "^1.0.4",
		"@types/mocha": "^10.0.7",
		"@types/mock-fs": "^4.13.4",
		"@types/mustache": "^4.2.5",
		"@types/node": "^16.18.113",
		"@types/semver": "^7.5.8",
		"@types/sinon": "^17.0.3",
		"@types/tmp": "^0.2.6",
		"@types/uuid": "^9.0.8",
		"@types/vscode": "^1.98.0",
		"@typescript-eslint/parser": "^6.7.0",
		"@vscode/l10n-dev": "^0.0.35",
		"@vscode/vsce": "^3.0.0",
		"chai": "^4.5.0",
		"chai-as-promised": "^7.1.2",
		"copy-webpack-plugin": "^12.0.2",
		"copyfiles": "^2.4.1",
		"dotenv": "^16.4.5",
		"mkdirp": "^3.0.1",
		"mocha": "^10.7.3",
		"mock-fs": "^5.4.1",
		"nerdbank-gitversioning": "3.6.133",
		"prettier": "^3.5.3",
		"sinon": "^18.0.0",
		"ts-loader": "^9.5.1",
		"ts-node": "^10.9.2",
		"typemoq": "^2.1.0",
		"typescript": "^5.2.2",
		"vscode-extension-tester": "^8.14.1",
		"webpack": "^5.85.0",
		"webpack-cli": "^5.1.1"
	},
	"dependencies": {
		"@anthropic-ai/sdk": "^0.51.0",
		"@azure-rest/ai-inference": "^1.0.0-beta.4",
		"@azure/ai-agents": "^1.0.0-beta.3",
		"@azure/ai-projects": "^1.0.0-beta.8",
		"@azure/arm-appcontainers": "^2.0.0",
		"@azure/arm-resources": "^5.2.0",
		"@azure/arm-storage": "^18.2.0",
		"@azure/arm-subscriptions": "^5.1.0",
		"@azure/core-rest-pipeline": "^1.15.2",
		"@azure/core-sse": "^2.1.3",
		"@azure/storage-file-share": "^12.24.0",
		"@google/generative-ai": "^0.22.0",
		"@langchain/community": "^0.3.5",
		"@langchain/core": "^0.3.10",
		"@microsoft/1ds-core-js": "^3.2.15",
		"@microsoft/1ds-post-js": "^3.2.15",
		"@microsoft/vscode-azext-azureauth": "^2.3.0",
		"@microsoft/vscode-azext-azureutils": "^3.0.1",
		"@modelcontextprotocol/sdk": "^1.11.0",
		"@types/lodash": "^4.17.14",
		"@vscode/extension-telemetry": "^0.9.6",
		"@vscode/python-extension": "^1.0.5",
		"@vscode/sqlite3": "^5.1.6-vscode",
		"adm-zip": "^0.5.15",
		"ajv": "^6.12.6",
		"async-mutex": "^0.5.0",
		"axios": "^1.7.4",
		"csv-parse": "^5.6.0",
		"csv-stringify": "^6.5.2",
		"epub2": "^3.0.2",
		"fs-extra": "^11.2.0",
		"glob": "^11.0.0",
		"html-to-text": "^9.0.5",
		"image-size": "^1.1.1",
		"lockfile": "^1.0.4",
		"lodash": "^4.17.21",
		"mammoth": "^1.8.0",
		"mime": "^4.0.4",
		"mustache": "^4.2.0",
		"officeparser": "^4.1.2",
		"ollama": "^0.5.12",
		"openai": "^4.104.0",
		"pdf-parse": "^1.1.1",
		"promise-socket": "^7.0.0",
		"semver": "^7.6.3",
		"systeminformation": "^5.25.11",
		"tiktoken": "^1.0.17",
		"tmp": "^0.2.3",
		"uuid": "^9.0.1",
		"vscode-jsonrpc": "^8.2.0",
		"yaml": "^2.5.0",
		"zod": "^3.23.8"
	},
	"__metadata": {
		"installedTimestamp": 1752626126655,
		"targetPlatform": "linux-x64",
		"size": 113900055
	}
}